pipeline {
    agent any

    environment {
        STACK_NAME = 'MyInfraStack'
        TEMPLATE_FILE = 'network-vpc.yaml'
        REGION = 'us-east-1'
    }

    stages {
        stage('Clone GitHub Repository') {
            steps {
                git url: 'https://github.com/TinkalTPawar/Github-Repo12.git', branch: 'main'
            }
        }

        stage('Validate CloudFormation Template') {
            steps {
                withAWS(credentials: 'aws-credentials', region: "${REGION}") {
                    bat """
                    set AWS_ACCESS_KEY_ID=%AWS_ACCESS_KEY_ID%
                    set AWS_SECRET_ACCESS_KEY=%AWS_SECRET_ACCESS_KEY%
                    aws cloudformation validate-template ^
                      --template-body file://${TEMPLATE_FILE}
                    """
                }
            }
        }

        stage('Deploy CloudFormation Stack') {
            steps {
                withAWS(credentials: 'aws-credentials', region: "${REGION}") {
                    bat """
                    set AWS_ACCESS_KEY_ID=%AWS_ACCESS_KEY_ID%
                    set AWS_SECRET_ACCESS_KEY=%AWS_SECRET_ACCESS_KEY%
                    aws cloudformation deploy ^
                      --template-file ${TEMPLATE_FILE} ^
                      --stack-name ${STACK_NAME} ^
                      --capabilities CAPABILITY_NAMED_IAM ^
                      --region ${REGION}
                    """
                }
            }
        }

        stage('Describe Stack Outputs') {
            steps {
                withAWS(credentials: 'aws-credentials', region: "${REGION}") {
                    bat """
                    set AWS_ACCESS_KEY_ID=%AWS_ACCESS_KEY_ID%
                    set AWS_SECRET_ACCESS_KEY=%AWS_SECRET_ACCESS_KEY%
                    aws cloudformation describe-stacks ^
                      --stack-name ${STACK_NAME} ^
                      --region ${REGION} ^
                      --query "Stacks[0].Outputs"
                    """
                }
            }
        }
    }

    post {
        failure {
            echo 'The pipeline has failed.'
        }
        success {
            echo 'The pipeline has succeeded.'
        }
    }
}